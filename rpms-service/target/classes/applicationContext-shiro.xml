<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">



    <!-- Shiro's main business-tier object for web-enabled applications
         (use DefaultSecurityManager instead when there is no web environment)-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="jdbcRealm"/>

    </bean>


    <bean id="jdbcRealm" class="cn.xxx.rpms.shiro.jdbcRealm">
        <property name="name" value="jdbcRealm"/>
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!--加密算法-->
                <property name="hashAlgorithmName" value="MD5"/>
                <!--加密次数-->
                <property name="hashIterations" value="10"/>
            </bean>
        </property>
    </bean>

    <!--用做注解配置权限方法-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after
         the lifecycleBeanProcessor has run: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Secure Spring remoting:  Ensure any Spring Remoting method invocations can be associated
         with a Subject for security checks. -->
    <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--loginUrl：没有登录，就会进入的页面
        successUrl：登录成功，进入这个页面
        unauthorizedUrl：没有权限，进入这个页面
        shiroFilter这个名字需要与web.xml里面的名字一致
        -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/shiro/success.jsp"/>
        <property name="unauthorizedUrl" value="/shiro/unauthorized.jsp"/>
        <!-- 设置权限和资源
            annon不需要权限和登录也可以访问的页面
            authc需要登录才能访问
        -->
        <!--<property name="filterChainDefinitions">-->
        <!--<value>-->
        <!--/shiro/login.jsp= anon-->
        <!--/login=anon-->
        <!--/** = authc-->
        <!--</value>-->
        <!--</property>-->
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"/>
        <property name="filters" >
            <map>
                <entry key="ajaxFilter" value-ref="ajaxPermissionsAuthorizationFilter"/>
            </map>
        </property>
    </bean>

    <!--用来设置自定义权限拦截跳转-->
    <bean id="ajaxPermissionsAuthorizationFilter" class="cn.xxx.rpms.shiro.AjaxPermissionsAuthorizationFilter"></bean>

    <!--用来设置权限的问题-->
    <bean id="filterChainDefinitionMap" factory-bean="filterChainDefinitionMapFactory" factory-method="createfilterChainDefinitionMap"/>
    <bean id="filterChainDefinitionMapFactory" class="cn.xxx.rpms.shiro.filterChainDefinitionMapFactory"/>

</beans>
