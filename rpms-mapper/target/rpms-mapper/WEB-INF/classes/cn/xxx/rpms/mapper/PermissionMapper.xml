<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xxx.rpms.mapper.PermissionMapper" >

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.xxx.rpms.domain.Permission" >

    insert into permission ( name, url,
      resource, menuId)
    values ( #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{resource,jdbcType=VARCHAR}, #{menuId,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.xxx.rpms.domain.Permission" >
    update permission
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      resource = #{resource,jdbcType=VARCHAR},
      menuId = #{menuId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="permissonMap" parameterType="java.lang.Long" >
    select id, name, url, resource, menuid
    from permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <resultMap id="permissonMap" type="cn.xxx.rpms.domain.Permission" >
    <id column="perid" property="id" jdbcType="BIGINT" />
    <result column="pername" property="name" jdbcType="VARCHAR" />
    <result column="perurl" property="url" jdbcType="VARCHAR" />
    <result column="perresource" property="resource" jdbcType="VARCHAR" />
  <association property="menuid" column="permenuid" javaType="cn.xxx.rpms.domain.Menu" select="cn.xxx.rpms.mapper.MenuMapper.selectByPrimaryKey">
  </association>
  </resultMap>
  <select id="loadDataByQuery" resultMap="permissonMap" parameterType="cn.xxx.basic.query.BaseQuery">
    select per.id perid, per.name pername, per.url perurl, per.resource perresource,per.menuid permenuid
    from permission per
  </select>
  <select id="selectAll" resultMap="permissonMap" >
    select per.id perid, per.name pername, per.url perurl, per.resource perresource,per.menuid permenuid
    from permission per
  </select>
  <resultMap id="manyMap" type="cn.xxx.rpms.domain.Permission" >
    <id column="perid" property="id" jdbcType="BIGINT" />
    <result column="pername" property="name" jdbcType="VARCHAR" />
    <result column="perurl" property="url" jdbcType="VARCHAR" />
    <result column="perresource" property="resource" jdbcType="VARCHAR" />
    <collection property="roles" column="perid" ofType="cn.xxx.rpms.domain.Role">
      <id column="rid" property="id" jdbcType="BIGINT" />
      <result column="rsn" property="sn" jdbcType="VARCHAR" />
      <result column="rname" property="name" jdbcType="VARCHAR" />
      <result column="rpermission" property="permission" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

<select id="selectManyRole" resultMap="manyMap" parameterType="cn.xxx.basic.query.BaseQuery">
    select per.id perid, per.name pername, per.url perurl, per.resource perresource,
    r.id rid ,r.sn rsn ,r.name rname ,r.permission rpermission
    from permission per left JOIN role_permission rp on per.id=rp.permission_id RIGHT JOIN role r on rp.role_id =r.id
</select>
<select id="selectManyRoleByID" resultMap="manyMap"  parameterType="java.lang.Long">
    select per.id perid, per.name pername, per.url perurl, per.resource perresource,
    r.id rid ,r.sn rsn ,r.name rname ,r.permission rpermission
    from permission per left JOIN role_permission rp on per.id=rp.permission_id RIGHT JOIN role r on rp.role_id =r.id
    WHERE per.id = #{id,jdbcType=BIGINT}
</select>




</mapper>